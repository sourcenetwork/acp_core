syntax = "proto3";

package sourcenetwork.acp_core;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sourcenetwork/acp_core/pkg/types";

// Object represents an entity which must be access controlled within a Policy.
message Object {
  string resource = 1;
  string id = 2;
}

// Actor represents an entity which makes access requests to a Policy.
message Actor {
  string id = 1;
}

// ActorSet represents a set of Actors in a Policy.
// It is specified through an Object, Relation pair, which represents
// all actors which have a relationship with given obj-rel pair.
// This expansion is recursive.
message ActorSet {
  Object object = 1;
  string relation = 2;
}

// AllActors models a special Relationship Subject which indicates
// that all Actors in the Policy are included.
message AllActors {}

// Subject specifies the target of a Relationship.
message Subject {
  oneof subject {
    Actor actor = 1;
    ActorSet actor_set = 2;
    AllActors all_actors = 3;
    Object object = 4;
  }
}

// Relationship models an access control rule.
// It states that the given subject has relation with object.
message Relationship {
  Object object = 1;
  string relation = 2;
  Subject subject = 3;
}

// RelationshipRecord represents a document contained a Relationship and additional data.
message RelationshipRecord {
  string policy_id = 1;

  // owner_did is the DID of the Actor which created the relationship
  string owner_did = 2;

  Relationship relationship = 3;

  // archived indicates whether an object has been unregistered
  bool archived = 4;

  google.protobuf.Timestamp creation_time = 5;

  // metadata contains arbitrary caller specified metadata
  map<string, string> metadata = 6;
}

// Registration represents a record assigning an Object as being owned by an Actor
message Registration {
  Object object = 1;
  Actor actor = 2;
}