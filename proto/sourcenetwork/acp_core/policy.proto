syntax = "proto3";

package sourcenetwork.acp_core;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sourcenetwork/acp_core/pkg/types";

// Policy represents an ACP module Policy definition.
// Each Policy defines a set of high level rules over how the acces control system
// should behave.
message Policy {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated Resource resources = 4;
  ActorResource actor_resource = 5;
  map<string, string> attributes = 6;
}

// Resource models a namespace for objects in a Policy.
// Appications will have multiple entities which they must manage such as files or groups.
// A Resource represents a set of entities of a certain type.
message Resource {
  string name = 1;
  string doc = 2;
  repeated Permission permissions = 3;
  repeated Relation relations = 4;
}

message Relation {
  string name = 1;

  string doc = 2;

  // list of relations managed by the current relation
  repeated string manages = 3;

  // value restriction types
  repeated Restriction vr_types = 4;
}

// Restriction models a specification which a Relationship's actor
// should meet.
message Restriction {
  // resource_name scopes permissible actors resource
  string resource_name = 1;
  // relation_name scopes permissible actors relation
  string relation_name = 2;
}

// Permission models a special type of Relation which is evaluated at runtime.
// A permission often maps to an operation defined for a resource which an actor may attempt.
message Permission {
  string name = 1;
  string doc = 2;
  string expression = 3;
}

// ActorResource represents a special Resource which is reserved for Policy actors.
message ActorResource {
  string name = 1;
  string doc = 2;
  repeated Relation relations = 3;
}
