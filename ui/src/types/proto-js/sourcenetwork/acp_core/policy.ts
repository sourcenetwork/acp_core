// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: sourcenetwork/acp_core/policy.proto

/* eslint-disable */

export const protobufPackage = "sourcenetwork.acp_core";

/**
 * Policy represents an ACP module Policy definition.
 * Each Policy defines a set of high level rules over how the acces control system
 * should behave.
 */
export interface Policy {
  id: string;
  name: string;
  description: string;
  creationTime: Date | undefined;
  attributes: { [key: string]: string };
  resources: Resource[];
  actorResource: ActorResource | undefined;
}

export interface Policy_AttributesEntry {
  key: string;
  value: string;
}

/**
 * Resource models a namespace for objects in a Policy.
 * Appications will have multiple entities which they must manage such as files or groups.
 * A Resource represents a set of entities of a certain type.
 */
export interface Resource {
  name: string;
  doc: string;
  permissions: Permission[];
  relations: Relation[];
}

export interface Relation {
  name: string;
  doc: string;
  /** list of relations managed by the current relation */
  manages: string[];
  /** value restriction types */
  vrTypes: Restriction[];
}

/**
 * Restriction models a specification which a Relationship's actor
 * should meet.
 */
export interface Restriction {
  /** resource_name scopes permissible actors resource */
  resourceName: string;
  /** relation_name scopes permissible actors relation */
  relationName: string;
}

/**
 * Permission models a special type of Relation which is evaluated at runtime.
 * A permission often maps to an operation defined for a resource which an actor may attempt.
 */
export interface Permission {
  name: string;
  doc: string;
  expression: string;
}

/** ActorResource represents a special Resource which is reserved for Policy actors. */
export interface ActorResource {
  name: string;
  doc: string;
  relations: Relation[];
}
