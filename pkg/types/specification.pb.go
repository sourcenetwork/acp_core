// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sourcenetwork/acp_core/specification.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// PolicySpecificationType models a named policy specification
type PolicySpecificationType int32

const (
	// UNKNOWN_SPEC models an invalid specification
	PolicySpecificationType_UNKNOWN_SPEC PolicySpecificationType = 0
	// DEFRA_SPEC models a policy which matches the Defra policy specification
	PolicySpecificationType_DEFRA_SPEC PolicySpecificationType = 1
	// NO_SPEC models a policy which has no additional contraints on it
	PolicySpecificationType_NO_SPEC PolicySpecificationType = 2
)

var PolicySpecificationType_name = map[int32]string{
	0: "UNKNOWN_SPEC",
	1: "DEFRA_SPEC",
	2: "NO_SPEC",
}

var PolicySpecificationType_value = map[string]int32{
	"UNKNOWN_SPEC": 0,
	"DEFRA_SPEC":   1,
	"NO_SPEC":      2,
}

func (x PolicySpecificationType) String() string {
	return proto.EnumName(PolicySpecificationType_name, int32(x))
}

func (PolicySpecificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_39232e8299b5420e, []int{0}
}

func init() {
	proto.RegisterEnum("sourcenetwork.acp_core.PolicySpecificationType", PolicySpecificationType_name, PolicySpecificationType_value)
}

func init() {
	proto.RegisterFile("sourcenetwork/acp_core/specification.proto", fileDescriptor_39232e8299b5420e)
}

var fileDescriptor_39232e8299b5420e = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2a, 0xce, 0x2f, 0x2d,
	0x4a, 0x4e, 0xcd, 0x4b, 0x2d, 0x29, 0xcf, 0x2f, 0xca, 0xd6, 0x4f, 0x4c, 0x2e, 0x88, 0x4f, 0xce,
	0x2f, 0x4a, 0xd5, 0x2f, 0x2e, 0x48, 0x4d, 0xce, 0x4c, 0xcb, 0x4c, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x43, 0x51, 0xab, 0x07, 0x53, 0xab, 0xe5, 0xc1,
	0x25, 0x1e, 0x90, 0x9f, 0x93, 0x99, 0x5c, 0x19, 0x8c, 0xac, 0x29, 0xa4, 0xb2, 0x20, 0x55, 0x48,
	0x80, 0x8b, 0x27, 0xd4, 0xcf, 0xdb, 0xcf, 0x3f, 0xdc, 0x2f, 0x3e, 0x38, 0xc0, 0xd5, 0x59, 0x80,
	0x41, 0x88, 0x8f, 0x8b, 0xcb, 0xc5, 0xd5, 0x2d, 0xc8, 0x11, 0xc2, 0x67, 0x14, 0xe2, 0xe6, 0x62,
	0xf7, 0xf3, 0x87, 0x70, 0x98, 0x9c, 0x5c, 0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1,
	0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e,
	0x21, 0x4a, 0x3b, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x1f, 0x87, 0x93,
	0x0b, 0xb2, 0xd3, 0xf5, 0x4b, 0x2a, 0x0b, 0x52, 0x8b, 0x93, 0xd8, 0xc0, 0xee, 0x35, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x8f, 0x3e, 0x2b, 0x78, 0xdd, 0x00, 0x00, 0x00,
}
