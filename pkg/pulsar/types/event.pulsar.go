// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package types

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_EventPolicyCreated             protoreflect.MessageDescriptor
	fd_EventPolicyCreated_policy_id   protoreflect.FieldDescriptor
	fd_EventPolicyCreated_policy_name protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventPolicyCreated = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventPolicyCreated")
	fd_EventPolicyCreated_policy_id = md_EventPolicyCreated.Fields().ByName("policy_id")
	fd_EventPolicyCreated_policy_name = md_EventPolicyCreated.Fields().ByName("policy_name")
}

var _ protoreflect.Message = (*fastReflection_EventPolicyCreated)(nil)

type fastReflection_EventPolicyCreated EventPolicyCreated

func (x *EventPolicyCreated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventPolicyCreated)(x)
}

func (x *EventPolicyCreated) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventPolicyCreated_messageType fastReflection_EventPolicyCreated_messageType
var _ protoreflect.MessageType = fastReflection_EventPolicyCreated_messageType{}

type fastReflection_EventPolicyCreated_messageType struct{}

func (x fastReflection_EventPolicyCreated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventPolicyCreated)(nil)
}
func (x fastReflection_EventPolicyCreated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventPolicyCreated)
}
func (x fastReflection_EventPolicyCreated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPolicyCreated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventPolicyCreated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPolicyCreated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventPolicyCreated) Type() protoreflect.MessageType {
	return _fastReflection_EventPolicyCreated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventPolicyCreated) New() protoreflect.Message {
	return new(fastReflection_EventPolicyCreated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventPolicyCreated) Interface() protoreflect.ProtoMessage {
	return (*EventPolicyCreated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventPolicyCreated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventPolicyCreated_policy_id, value) {
			return
		}
	}
	if x.PolicyName != "" {
		value := protoreflect.ValueOfString(x.PolicyName)
		if !f(fd_EventPolicyCreated_policy_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventPolicyCreated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_name":
		return x.PolicyName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyCreated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyCreated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_name":
		x.PolicyName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyCreated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventPolicyCreated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_name":
		value := x.PolicyName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyCreated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyCreated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_name":
		x.PolicyName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyCreated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyCreated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventPolicyCreated is not mutable"))
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_name":
		panic(fmt.Errorf("field policy_name of message sourcenetwork.acp_core.EventPolicyCreated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyCreated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventPolicyCreated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventPolicyCreated.policy_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyCreated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventPolicyCreated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventPolicyCreated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventPolicyCreated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyCreated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventPolicyCreated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventPolicyCreated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventPolicyCreated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventPolicyCreated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PolicyName) > 0 {
			i -= len(x.PolicyName)
			copy(dAtA[i:], x.PolicyName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyName)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventPolicyCreated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPolicyCreated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPolicyCreated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventPolicyEdited                       protoreflect.MessageDescriptor
	fd_EventPolicyEdited_policy_id             protoreflect.FieldDescriptor
	fd_EventPolicyEdited_policy_name           protoreflect.FieldDescriptor
	fd_EventPolicyEdited_relationships_removed protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventPolicyEdited = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventPolicyEdited")
	fd_EventPolicyEdited_policy_id = md_EventPolicyEdited.Fields().ByName("policy_id")
	fd_EventPolicyEdited_policy_name = md_EventPolicyEdited.Fields().ByName("policy_name")
	fd_EventPolicyEdited_relationships_removed = md_EventPolicyEdited.Fields().ByName("relationships_removed")
}

var _ protoreflect.Message = (*fastReflection_EventPolicyEdited)(nil)

type fastReflection_EventPolicyEdited EventPolicyEdited

func (x *EventPolicyEdited) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventPolicyEdited)(x)
}

func (x *EventPolicyEdited) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventPolicyEdited_messageType fastReflection_EventPolicyEdited_messageType
var _ protoreflect.MessageType = fastReflection_EventPolicyEdited_messageType{}

type fastReflection_EventPolicyEdited_messageType struct{}

func (x fastReflection_EventPolicyEdited_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventPolicyEdited)(nil)
}
func (x fastReflection_EventPolicyEdited_messageType) New() protoreflect.Message {
	return new(fastReflection_EventPolicyEdited)
}
func (x fastReflection_EventPolicyEdited_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPolicyEdited
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventPolicyEdited) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPolicyEdited
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventPolicyEdited) Type() protoreflect.MessageType {
	return _fastReflection_EventPolicyEdited_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventPolicyEdited) New() protoreflect.Message {
	return new(fastReflection_EventPolicyEdited)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventPolicyEdited) Interface() protoreflect.ProtoMessage {
	return (*EventPolicyEdited)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventPolicyEdited) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventPolicyEdited_policy_id, value) {
			return
		}
	}
	if x.PolicyName != "" {
		value := protoreflect.ValueOfString(x.PolicyName)
		if !f(fd_EventPolicyEdited_policy_name, value) {
			return
		}
	}
	if x.RelationshipsRemoved != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RelationshipsRemoved)
		if !f(fd_EventPolicyEdited_relationships_removed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventPolicyEdited) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_name":
		return x.PolicyName != ""
	case "sourcenetwork.acp_core.EventPolicyEdited.relationships_removed":
		return x.RelationshipsRemoved != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyEdited"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyEdited does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyEdited) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_name":
		x.PolicyName = ""
	case "sourcenetwork.acp_core.EventPolicyEdited.relationships_removed":
		x.RelationshipsRemoved = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyEdited"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyEdited does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventPolicyEdited) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_name":
		value := x.PolicyName
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventPolicyEdited.relationships_removed":
		value := x.RelationshipsRemoved
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyEdited"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyEdited does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyEdited) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_name":
		x.PolicyName = value.Interface().(string)
	case "sourcenetwork.acp_core.EventPolicyEdited.relationships_removed":
		x.RelationshipsRemoved = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyEdited"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyEdited does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyEdited) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventPolicyEdited is not mutable"))
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_name":
		panic(fmt.Errorf("field policy_name of message sourcenetwork.acp_core.EventPolicyEdited is not mutable"))
	case "sourcenetwork.acp_core.EventPolicyEdited.relationships_removed":
		panic(fmt.Errorf("field relationships_removed of message sourcenetwork.acp_core.EventPolicyEdited is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyEdited"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyEdited does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventPolicyEdited) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventPolicyEdited.policy_name":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventPolicyEdited.relationships_removed":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventPolicyEdited"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventPolicyEdited does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventPolicyEdited) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventPolicyEdited", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventPolicyEdited) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPolicyEdited) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventPolicyEdited) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventPolicyEdited) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventPolicyEdited)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RelationshipsRemoved != 0 {
			n += 1 + runtime.Sov(uint64(x.RelationshipsRemoved))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventPolicyEdited)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RelationshipsRemoved != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RelationshipsRemoved))
			i--
			dAtA[i] = 0x20
		}
		if len(x.PolicyName) > 0 {
			i -= len(x.PolicyName)
			copy(dAtA[i:], x.PolicyName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyName)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventPolicyEdited)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPolicyEdited: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPolicyEdited: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RelationshipsRemoved", wireType)
				}
				x.RelationshipsRemoved = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RelationshipsRemoved |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventAccessDecisionCreated             protoreflect.MessageDescriptor
	fd_EventAccessDecisionCreated_creator     protoreflect.FieldDescriptor
	fd_EventAccessDecisionCreated_policy_id   protoreflect.FieldDescriptor
	fd_EventAccessDecisionCreated_decision_id protoreflect.FieldDescriptor
	fd_EventAccessDecisionCreated_actor       protoreflect.FieldDescriptor
	fd_EventAccessDecisionCreated_actor_did   protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventAccessDecisionCreated = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventAccessDecisionCreated")
	fd_EventAccessDecisionCreated_creator = md_EventAccessDecisionCreated.Fields().ByName("creator")
	fd_EventAccessDecisionCreated_policy_id = md_EventAccessDecisionCreated.Fields().ByName("policy_id")
	fd_EventAccessDecisionCreated_decision_id = md_EventAccessDecisionCreated.Fields().ByName("decision_id")
	fd_EventAccessDecisionCreated_actor = md_EventAccessDecisionCreated.Fields().ByName("actor")
	fd_EventAccessDecisionCreated_actor_did = md_EventAccessDecisionCreated.Fields().ByName("actor_did")
}

var _ protoreflect.Message = (*fastReflection_EventAccessDecisionCreated)(nil)

type fastReflection_EventAccessDecisionCreated EventAccessDecisionCreated

func (x *EventAccessDecisionCreated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventAccessDecisionCreated)(x)
}

func (x *EventAccessDecisionCreated) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventAccessDecisionCreated_messageType fastReflection_EventAccessDecisionCreated_messageType
var _ protoreflect.MessageType = fastReflection_EventAccessDecisionCreated_messageType{}

type fastReflection_EventAccessDecisionCreated_messageType struct{}

func (x fastReflection_EventAccessDecisionCreated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventAccessDecisionCreated)(nil)
}
func (x fastReflection_EventAccessDecisionCreated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventAccessDecisionCreated)
}
func (x fastReflection_EventAccessDecisionCreated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventAccessDecisionCreated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventAccessDecisionCreated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventAccessDecisionCreated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventAccessDecisionCreated) Type() protoreflect.MessageType {
	return _fastReflection_EventAccessDecisionCreated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventAccessDecisionCreated) New() protoreflect.Message {
	return new(fastReflection_EventAccessDecisionCreated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventAccessDecisionCreated) Interface() protoreflect.ProtoMessage {
	return (*EventAccessDecisionCreated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventAccessDecisionCreated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_EventAccessDecisionCreated_creator, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventAccessDecisionCreated_policy_id, value) {
			return
		}
	}
	if x.DecisionId != "" {
		value := protoreflect.ValueOfString(x.DecisionId)
		if !f(fd_EventAccessDecisionCreated_decision_id, value) {
			return
		}
	}
	if x.Actor != "" {
		value := protoreflect.ValueOfString(x.Actor)
		if !f(fd_EventAccessDecisionCreated_actor, value) {
			return
		}
	}
	if x.ActorDid != "" {
		value := protoreflect.ValueOfString(x.ActorDid)
		if !f(fd_EventAccessDecisionCreated_actor_did, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventAccessDecisionCreated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.creator":
		return x.Creator != ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.decision_id":
		return x.DecisionId != ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor":
		return x.Actor != ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor_did":
		return x.ActorDid != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventAccessDecisionCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventAccessDecisionCreated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAccessDecisionCreated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.creator":
		x.Creator = ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.decision_id":
		x.DecisionId = ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor":
		x.Actor = ""
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor_did":
		x.ActorDid = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventAccessDecisionCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventAccessDecisionCreated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventAccessDecisionCreated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.decision_id":
		value := x.DecisionId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor":
		value := x.Actor
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor_did":
		value := x.ActorDid
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventAccessDecisionCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventAccessDecisionCreated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAccessDecisionCreated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.creator":
		x.Creator = value.Interface().(string)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.decision_id":
		x.DecisionId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor":
		x.Actor = value.Interface().(string)
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor_did":
		x.ActorDid = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventAccessDecisionCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventAccessDecisionCreated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAccessDecisionCreated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.creator":
		panic(fmt.Errorf("field creator of message sourcenetwork.acp_core.EventAccessDecisionCreated is not mutable"))
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventAccessDecisionCreated is not mutable"))
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.decision_id":
		panic(fmt.Errorf("field decision_id of message sourcenetwork.acp_core.EventAccessDecisionCreated is not mutable"))
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor":
		panic(fmt.Errorf("field actor of message sourcenetwork.acp_core.EventAccessDecisionCreated is not mutable"))
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor_did":
		panic(fmt.Errorf("field actor_did of message sourcenetwork.acp_core.EventAccessDecisionCreated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventAccessDecisionCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventAccessDecisionCreated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventAccessDecisionCreated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.creator":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.decision_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventAccessDecisionCreated.actor_did":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventAccessDecisionCreated"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventAccessDecisionCreated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventAccessDecisionCreated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventAccessDecisionCreated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventAccessDecisionCreated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAccessDecisionCreated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventAccessDecisionCreated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventAccessDecisionCreated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventAccessDecisionCreated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DecisionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Actor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ActorDid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventAccessDecisionCreated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ActorDid) > 0 {
			i -= len(x.ActorDid)
			copy(dAtA[i:], x.ActorDid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorDid)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Actor) > 0 {
			i -= len(x.Actor)
			copy(dAtA[i:], x.Actor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Actor)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.DecisionId) > 0 {
			i -= len(x.DecisionId)
			copy(dAtA[i:], x.DecisionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DecisionId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventAccessDecisionCreated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventAccessDecisionCreated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventAccessDecisionCreated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DecisionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DecisionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorDid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorDid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventObjectRegistered                 protoreflect.MessageDescriptor
	fd_EventObjectRegistered_actor           protoreflect.FieldDescriptor
	fd_EventObjectRegistered_policy_id       protoreflect.FieldDescriptor
	fd_EventObjectRegistered_object_resource protoreflect.FieldDescriptor
	fd_EventObjectRegistered_object_id       protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventObjectRegistered = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventObjectRegistered")
	fd_EventObjectRegistered_actor = md_EventObjectRegistered.Fields().ByName("actor")
	fd_EventObjectRegistered_policy_id = md_EventObjectRegistered.Fields().ByName("policy_id")
	fd_EventObjectRegistered_object_resource = md_EventObjectRegistered.Fields().ByName("object_resource")
	fd_EventObjectRegistered_object_id = md_EventObjectRegistered.Fields().ByName("object_id")
}

var _ protoreflect.Message = (*fastReflection_EventObjectRegistered)(nil)

type fastReflection_EventObjectRegistered EventObjectRegistered

func (x *EventObjectRegistered) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventObjectRegistered)(x)
}

func (x *EventObjectRegistered) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventObjectRegistered_messageType fastReflection_EventObjectRegistered_messageType
var _ protoreflect.MessageType = fastReflection_EventObjectRegistered_messageType{}

type fastReflection_EventObjectRegistered_messageType struct{}

func (x fastReflection_EventObjectRegistered_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventObjectRegistered)(nil)
}
func (x fastReflection_EventObjectRegistered_messageType) New() protoreflect.Message {
	return new(fastReflection_EventObjectRegistered)
}
func (x fastReflection_EventObjectRegistered_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectRegistered
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventObjectRegistered) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectRegistered
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventObjectRegistered) Type() protoreflect.MessageType {
	return _fastReflection_EventObjectRegistered_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventObjectRegistered) New() protoreflect.Message {
	return new(fastReflection_EventObjectRegistered)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventObjectRegistered) Interface() protoreflect.ProtoMessage {
	return (*EventObjectRegistered)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventObjectRegistered) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Actor != "" {
		value := protoreflect.ValueOfString(x.Actor)
		if !f(fd_EventObjectRegistered_actor, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventObjectRegistered_policy_id, value) {
			return
		}
	}
	if x.ObjectResource != "" {
		value := protoreflect.ValueOfString(x.ObjectResource)
		if !f(fd_EventObjectRegistered_object_resource, value) {
			return
		}
	}
	if x.ObjectId != "" {
		value := protoreflect.ValueOfString(x.ObjectId)
		if !f(fd_EventObjectRegistered_object_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventObjectRegistered) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistered.actor":
		return x.Actor != ""
	case "sourcenetwork.acp_core.EventObjectRegistered.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventObjectRegistered.object_resource":
		return x.ObjectResource != ""
	case "sourcenetwork.acp_core.EventObjectRegistered.object_id":
		return x.ObjectId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistered does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistered) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistered.actor":
		x.Actor = ""
	case "sourcenetwork.acp_core.EventObjectRegistered.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventObjectRegistered.object_resource":
		x.ObjectResource = ""
	case "sourcenetwork.acp_core.EventObjectRegistered.object_id":
		x.ObjectId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistered does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventObjectRegistered) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistered.actor":
		value := x.Actor
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistered.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistered.object_resource":
		value := x.ObjectResource
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistered.object_id":
		value := x.ObjectId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistered does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistered) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistered.actor":
		x.Actor = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistered.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistered.object_resource":
		x.ObjectResource = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistered.object_id":
		x.ObjectId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistered does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistered) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistered.actor":
		panic(fmt.Errorf("field actor of message sourcenetwork.acp_core.EventObjectRegistered is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistered.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventObjectRegistered is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistered.object_resource":
		panic(fmt.Errorf("field object_resource of message sourcenetwork.acp_core.EventObjectRegistered is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistered.object_id":
		panic(fmt.Errorf("field object_id of message sourcenetwork.acp_core.EventObjectRegistered is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistered does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventObjectRegistered) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistered.actor":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistered.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistered.object_resource":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistered.object_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistered does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventObjectRegistered) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventObjectRegistered", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventObjectRegistered) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistered) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventObjectRegistered) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventObjectRegistered) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventObjectRegistered)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Actor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectResource)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectRegistered)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ObjectId) > 0 {
			i -= len(x.ObjectId)
			copy(dAtA[i:], x.ObjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ObjectResource) > 0 {
			i -= len(x.ObjectResource)
			copy(dAtA[i:], x.ObjectResource)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectResource)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Actor) > 0 {
			i -= len(x.Actor)
			copy(dAtA[i:], x.Actor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Actor)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectRegistered)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectRegistered: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectRegistered: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectResource", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectResource = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventObjectArchived                 protoreflect.MessageDescriptor
	fd_EventObjectArchived_actor           protoreflect.FieldDescriptor
	fd_EventObjectArchived_policy_id       protoreflect.FieldDescriptor
	fd_EventObjectArchived_object_resource protoreflect.FieldDescriptor
	fd_EventObjectArchived_object_id       protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventObjectArchived = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventObjectArchived")
	fd_EventObjectArchived_actor = md_EventObjectArchived.Fields().ByName("actor")
	fd_EventObjectArchived_policy_id = md_EventObjectArchived.Fields().ByName("policy_id")
	fd_EventObjectArchived_object_resource = md_EventObjectArchived.Fields().ByName("object_resource")
	fd_EventObjectArchived_object_id = md_EventObjectArchived.Fields().ByName("object_id")
}

var _ protoreflect.Message = (*fastReflection_EventObjectArchived)(nil)

type fastReflection_EventObjectArchived EventObjectArchived

func (x *EventObjectArchived) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventObjectArchived)(x)
}

func (x *EventObjectArchived) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventObjectArchived_messageType fastReflection_EventObjectArchived_messageType
var _ protoreflect.MessageType = fastReflection_EventObjectArchived_messageType{}

type fastReflection_EventObjectArchived_messageType struct{}

func (x fastReflection_EventObjectArchived_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventObjectArchived)(nil)
}
func (x fastReflection_EventObjectArchived_messageType) New() protoreflect.Message {
	return new(fastReflection_EventObjectArchived)
}
func (x fastReflection_EventObjectArchived_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectArchived
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventObjectArchived) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectArchived
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventObjectArchived) Type() protoreflect.MessageType {
	return _fastReflection_EventObjectArchived_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventObjectArchived) New() protoreflect.Message {
	return new(fastReflection_EventObjectArchived)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventObjectArchived) Interface() protoreflect.ProtoMessage {
	return (*EventObjectArchived)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventObjectArchived) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Actor != "" {
		value := protoreflect.ValueOfString(x.Actor)
		if !f(fd_EventObjectArchived_actor, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventObjectArchived_policy_id, value) {
			return
		}
	}
	if x.ObjectResource != "" {
		value := protoreflect.ValueOfString(x.ObjectResource)
		if !f(fd_EventObjectArchived_object_resource, value) {
			return
		}
	}
	if x.ObjectId != "" {
		value := protoreflect.ValueOfString(x.ObjectId)
		if !f(fd_EventObjectArchived_object_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventObjectArchived) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectArchived.actor":
		return x.Actor != ""
	case "sourcenetwork.acp_core.EventObjectArchived.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventObjectArchived.object_resource":
		return x.ObjectResource != ""
	case "sourcenetwork.acp_core.EventObjectArchived.object_id":
		return x.ObjectId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectArchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectArchived does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectArchived) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectArchived.actor":
		x.Actor = ""
	case "sourcenetwork.acp_core.EventObjectArchived.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventObjectArchived.object_resource":
		x.ObjectResource = ""
	case "sourcenetwork.acp_core.EventObjectArchived.object_id":
		x.ObjectId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectArchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectArchived does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventObjectArchived) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventObjectArchived.actor":
		value := x.Actor
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectArchived.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectArchived.object_resource":
		value := x.ObjectResource
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectArchived.object_id":
		value := x.ObjectId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectArchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectArchived does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectArchived) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectArchived.actor":
		x.Actor = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectArchived.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectArchived.object_resource":
		x.ObjectResource = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectArchived.object_id":
		x.ObjectId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectArchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectArchived does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectArchived) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectArchived.actor":
		panic(fmt.Errorf("field actor of message sourcenetwork.acp_core.EventObjectArchived is not mutable"))
	case "sourcenetwork.acp_core.EventObjectArchived.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventObjectArchived is not mutable"))
	case "sourcenetwork.acp_core.EventObjectArchived.object_resource":
		panic(fmt.Errorf("field object_resource of message sourcenetwork.acp_core.EventObjectArchived is not mutable"))
	case "sourcenetwork.acp_core.EventObjectArchived.object_id":
		panic(fmt.Errorf("field object_id of message sourcenetwork.acp_core.EventObjectArchived is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectArchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectArchived does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventObjectArchived) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectArchived.actor":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectArchived.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectArchived.object_resource":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectArchived.object_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectArchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectArchived does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventObjectArchived) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventObjectArchived", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventObjectArchived) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectArchived) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventObjectArchived) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventObjectArchived) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventObjectArchived)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Actor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectResource)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectArchived)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ObjectId) > 0 {
			i -= len(x.ObjectId)
			copy(dAtA[i:], x.ObjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ObjectResource) > 0 {
			i -= len(x.ObjectResource)
			copy(dAtA[i:], x.ObjectResource)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectResource)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Actor) > 0 {
			i -= len(x.Actor)
			copy(dAtA[i:], x.Actor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Actor)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectArchived)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectArchived: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectArchived: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectResource", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectResource = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventObjectUnarchived                 protoreflect.MessageDescriptor
	fd_EventObjectUnarchived_actor           protoreflect.FieldDescriptor
	fd_EventObjectUnarchived_policy_id       protoreflect.FieldDescriptor
	fd_EventObjectUnarchived_object_resource protoreflect.FieldDescriptor
	fd_EventObjectUnarchived_object_id       protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventObjectUnarchived = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventObjectUnarchived")
	fd_EventObjectUnarchived_actor = md_EventObjectUnarchived.Fields().ByName("actor")
	fd_EventObjectUnarchived_policy_id = md_EventObjectUnarchived.Fields().ByName("policy_id")
	fd_EventObjectUnarchived_object_resource = md_EventObjectUnarchived.Fields().ByName("object_resource")
	fd_EventObjectUnarchived_object_id = md_EventObjectUnarchived.Fields().ByName("object_id")
}

var _ protoreflect.Message = (*fastReflection_EventObjectUnarchived)(nil)

type fastReflection_EventObjectUnarchived EventObjectUnarchived

func (x *EventObjectUnarchived) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventObjectUnarchived)(x)
}

func (x *EventObjectUnarchived) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventObjectUnarchived_messageType fastReflection_EventObjectUnarchived_messageType
var _ protoreflect.MessageType = fastReflection_EventObjectUnarchived_messageType{}

type fastReflection_EventObjectUnarchived_messageType struct{}

func (x fastReflection_EventObjectUnarchived_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventObjectUnarchived)(nil)
}
func (x fastReflection_EventObjectUnarchived_messageType) New() protoreflect.Message {
	return new(fastReflection_EventObjectUnarchived)
}
func (x fastReflection_EventObjectUnarchived_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectUnarchived
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventObjectUnarchived) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectUnarchived
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventObjectUnarchived) Type() protoreflect.MessageType {
	return _fastReflection_EventObjectUnarchived_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventObjectUnarchived) New() protoreflect.Message {
	return new(fastReflection_EventObjectUnarchived)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventObjectUnarchived) Interface() protoreflect.ProtoMessage {
	return (*EventObjectUnarchived)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventObjectUnarchived) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Actor != "" {
		value := protoreflect.ValueOfString(x.Actor)
		if !f(fd_EventObjectUnarchived_actor, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventObjectUnarchived_policy_id, value) {
			return
		}
	}
	if x.ObjectResource != "" {
		value := protoreflect.ValueOfString(x.ObjectResource)
		if !f(fd_EventObjectUnarchived_object_resource, value) {
			return
		}
	}
	if x.ObjectId != "" {
		value := protoreflect.ValueOfString(x.ObjectId)
		if !f(fd_EventObjectUnarchived_object_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventObjectUnarchived) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectUnarchived.actor":
		return x.Actor != ""
	case "sourcenetwork.acp_core.EventObjectUnarchived.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_resource":
		return x.ObjectResource != ""
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_id":
		return x.ObjectId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectUnarchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectUnarchived does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectUnarchived) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectUnarchived.actor":
		x.Actor = ""
	case "sourcenetwork.acp_core.EventObjectUnarchived.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_resource":
		x.ObjectResource = ""
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_id":
		x.ObjectId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectUnarchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectUnarchived does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventObjectUnarchived) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventObjectUnarchived.actor":
		value := x.Actor
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectUnarchived.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_resource":
		value := x.ObjectResource
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_id":
		value := x.ObjectId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectUnarchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectUnarchived does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectUnarchived) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectUnarchived.actor":
		x.Actor = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectUnarchived.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_resource":
		x.ObjectResource = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_id":
		x.ObjectId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectUnarchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectUnarchived does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectUnarchived) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectUnarchived.actor":
		panic(fmt.Errorf("field actor of message sourcenetwork.acp_core.EventObjectUnarchived is not mutable"))
	case "sourcenetwork.acp_core.EventObjectUnarchived.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventObjectUnarchived is not mutable"))
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_resource":
		panic(fmt.Errorf("field object_resource of message sourcenetwork.acp_core.EventObjectUnarchived is not mutable"))
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_id":
		panic(fmt.Errorf("field object_id of message sourcenetwork.acp_core.EventObjectUnarchived is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectUnarchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectUnarchived does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventObjectUnarchived) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectUnarchived.actor":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectUnarchived.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_resource":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectUnarchived.object_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectUnarchived"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectUnarchived does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventObjectUnarchived) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventObjectUnarchived", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventObjectUnarchived) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectUnarchived) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventObjectUnarchived) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventObjectUnarchived) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventObjectUnarchived)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Actor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectResource)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectUnarchived)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ObjectId) > 0 {
			i -= len(x.ObjectId)
			copy(dAtA[i:], x.ObjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ObjectResource) > 0 {
			i -= len(x.ObjectResource)
			copy(dAtA[i:], x.ObjectResource)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectResource)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Actor) > 0 {
			i -= len(x.Actor)
			copy(dAtA[i:], x.Actor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Actor)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectUnarchived)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectUnarchived: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectUnarchived: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectResource", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectResource = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventObjectTransfered                 protoreflect.MessageDescriptor
	fd_EventObjectTransfered_new_owner       protoreflect.FieldDescriptor
	fd_EventObjectTransfered_policy_id       protoreflect.FieldDescriptor
	fd_EventObjectTransfered_object_resource protoreflect.FieldDescriptor
	fd_EventObjectTransfered_object_id       protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventObjectTransfered = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventObjectTransfered")
	fd_EventObjectTransfered_new_owner = md_EventObjectTransfered.Fields().ByName("new_owner")
	fd_EventObjectTransfered_policy_id = md_EventObjectTransfered.Fields().ByName("policy_id")
	fd_EventObjectTransfered_object_resource = md_EventObjectTransfered.Fields().ByName("object_resource")
	fd_EventObjectTransfered_object_id = md_EventObjectTransfered.Fields().ByName("object_id")
}

var _ protoreflect.Message = (*fastReflection_EventObjectTransfered)(nil)

type fastReflection_EventObjectTransfered EventObjectTransfered

func (x *EventObjectTransfered) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventObjectTransfered)(x)
}

func (x *EventObjectTransfered) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventObjectTransfered_messageType fastReflection_EventObjectTransfered_messageType
var _ protoreflect.MessageType = fastReflection_EventObjectTransfered_messageType{}

type fastReflection_EventObjectTransfered_messageType struct{}

func (x fastReflection_EventObjectTransfered_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventObjectTransfered)(nil)
}
func (x fastReflection_EventObjectTransfered_messageType) New() protoreflect.Message {
	return new(fastReflection_EventObjectTransfered)
}
func (x fastReflection_EventObjectTransfered_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectTransfered
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventObjectTransfered) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectTransfered
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventObjectTransfered) Type() protoreflect.MessageType {
	return _fastReflection_EventObjectTransfered_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventObjectTransfered) New() protoreflect.Message {
	return new(fastReflection_EventObjectTransfered)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventObjectTransfered) Interface() protoreflect.ProtoMessage {
	return (*EventObjectTransfered)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventObjectTransfered) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NewOwner != "" {
		value := protoreflect.ValueOfString(x.NewOwner)
		if !f(fd_EventObjectTransfered_new_owner, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventObjectTransfered_policy_id, value) {
			return
		}
	}
	if x.ObjectResource != "" {
		value := protoreflect.ValueOfString(x.ObjectResource)
		if !f(fd_EventObjectTransfered_object_resource, value) {
			return
		}
	}
	if x.ObjectId != "" {
		value := protoreflect.ValueOfString(x.ObjectId)
		if !f(fd_EventObjectTransfered_object_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventObjectTransfered) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectTransfered.new_owner":
		return x.NewOwner != ""
	case "sourcenetwork.acp_core.EventObjectTransfered.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventObjectTransfered.object_resource":
		return x.ObjectResource != ""
	case "sourcenetwork.acp_core.EventObjectTransfered.object_id":
		return x.ObjectId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectTransfered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectTransfered does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectTransfered) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectTransfered.new_owner":
		x.NewOwner = ""
	case "sourcenetwork.acp_core.EventObjectTransfered.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventObjectTransfered.object_resource":
		x.ObjectResource = ""
	case "sourcenetwork.acp_core.EventObjectTransfered.object_id":
		x.ObjectId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectTransfered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectTransfered does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventObjectTransfered) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventObjectTransfered.new_owner":
		value := x.NewOwner
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectTransfered.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectTransfered.object_resource":
		value := x.ObjectResource
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectTransfered.object_id":
		value := x.ObjectId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectTransfered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectTransfered does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectTransfered) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectTransfered.new_owner":
		x.NewOwner = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectTransfered.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectTransfered.object_resource":
		x.ObjectResource = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectTransfered.object_id":
		x.ObjectId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectTransfered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectTransfered does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectTransfered) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectTransfered.new_owner":
		panic(fmt.Errorf("field new_owner of message sourcenetwork.acp_core.EventObjectTransfered is not mutable"))
	case "sourcenetwork.acp_core.EventObjectTransfered.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventObjectTransfered is not mutable"))
	case "sourcenetwork.acp_core.EventObjectTransfered.object_resource":
		panic(fmt.Errorf("field object_resource of message sourcenetwork.acp_core.EventObjectTransfered is not mutable"))
	case "sourcenetwork.acp_core.EventObjectTransfered.object_id":
		panic(fmt.Errorf("field object_id of message sourcenetwork.acp_core.EventObjectTransfered is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectTransfered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectTransfered does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventObjectTransfered) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectTransfered.new_owner":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectTransfered.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectTransfered.object_resource":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectTransfered.object_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectTransfered"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectTransfered does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventObjectTransfered) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventObjectTransfered", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventObjectTransfered) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectTransfered) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventObjectTransfered) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventObjectTransfered) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventObjectTransfered)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NewOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectResource)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectTransfered)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ObjectId) > 0 {
			i -= len(x.ObjectId)
			copy(dAtA[i:], x.ObjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ObjectResource) > 0 {
			i -= len(x.ObjectResource)
			copy(dAtA[i:], x.ObjectResource)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectResource)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.NewOwner) > 0 {
			i -= len(x.NewOwner)
			copy(dAtA[i:], x.NewOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewOwner)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectTransfered)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectTransfered: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectTransfered: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectResource", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectResource = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventObjectRegistrationAmended                 protoreflect.MessageDescriptor
	fd_EventObjectRegistrationAmended_old_owner       protoreflect.FieldDescriptor
	fd_EventObjectRegistrationAmended_new_owner       protoreflect.FieldDescriptor
	fd_EventObjectRegistrationAmended_policy_id       protoreflect.FieldDescriptor
	fd_EventObjectRegistrationAmended_object_resource protoreflect.FieldDescriptor
	fd_EventObjectRegistrationAmended_object_id       protoreflect.FieldDescriptor
)

func init() {
	file_sourcenetwork_acp_core_event_proto_init()
	md_EventObjectRegistrationAmended = File_sourcenetwork_acp_core_event_proto.Messages().ByName("EventObjectRegistrationAmended")
	fd_EventObjectRegistrationAmended_old_owner = md_EventObjectRegistrationAmended.Fields().ByName("old_owner")
	fd_EventObjectRegistrationAmended_new_owner = md_EventObjectRegistrationAmended.Fields().ByName("new_owner")
	fd_EventObjectRegistrationAmended_policy_id = md_EventObjectRegistrationAmended.Fields().ByName("policy_id")
	fd_EventObjectRegistrationAmended_object_resource = md_EventObjectRegistrationAmended.Fields().ByName("object_resource")
	fd_EventObjectRegistrationAmended_object_id = md_EventObjectRegistrationAmended.Fields().ByName("object_id")
}

var _ protoreflect.Message = (*fastReflection_EventObjectRegistrationAmended)(nil)

type fastReflection_EventObjectRegistrationAmended EventObjectRegistrationAmended

func (x *EventObjectRegistrationAmended) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventObjectRegistrationAmended)(x)
}

func (x *EventObjectRegistrationAmended) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventObjectRegistrationAmended_messageType fastReflection_EventObjectRegistrationAmended_messageType
var _ protoreflect.MessageType = fastReflection_EventObjectRegistrationAmended_messageType{}

type fastReflection_EventObjectRegistrationAmended_messageType struct{}

func (x fastReflection_EventObjectRegistrationAmended_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventObjectRegistrationAmended)(nil)
}
func (x fastReflection_EventObjectRegistrationAmended_messageType) New() protoreflect.Message {
	return new(fastReflection_EventObjectRegistrationAmended)
}
func (x fastReflection_EventObjectRegistrationAmended_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectRegistrationAmended
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventObjectRegistrationAmended) Descriptor() protoreflect.MessageDescriptor {
	return md_EventObjectRegistrationAmended
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventObjectRegistrationAmended) Type() protoreflect.MessageType {
	return _fastReflection_EventObjectRegistrationAmended_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventObjectRegistrationAmended) New() protoreflect.Message {
	return new(fastReflection_EventObjectRegistrationAmended)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventObjectRegistrationAmended) Interface() protoreflect.ProtoMessage {
	return (*EventObjectRegistrationAmended)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventObjectRegistrationAmended) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OldOwner != "" {
		value := protoreflect.ValueOfString(x.OldOwner)
		if !f(fd_EventObjectRegistrationAmended_old_owner, value) {
			return
		}
	}
	if x.NewOwner != "" {
		value := protoreflect.ValueOfString(x.NewOwner)
		if !f(fd_EventObjectRegistrationAmended_new_owner, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_EventObjectRegistrationAmended_policy_id, value) {
			return
		}
	}
	if x.ObjectResource != "" {
		value := protoreflect.ValueOfString(x.ObjectResource)
		if !f(fd_EventObjectRegistrationAmended_object_resource, value) {
			return
		}
	}
	if x.ObjectId != "" {
		value := protoreflect.ValueOfString(x.ObjectId)
		if !f(fd_EventObjectRegistrationAmended_object_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventObjectRegistrationAmended) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.old_owner":
		return x.OldOwner != ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.new_owner":
		return x.NewOwner != ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.policy_id":
		return x.PolicyId != ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_resource":
		return x.ObjectResource != ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_id":
		return x.ObjectId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistrationAmended"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistrationAmended does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistrationAmended) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.old_owner":
		x.OldOwner = ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.new_owner":
		x.NewOwner = ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.policy_id":
		x.PolicyId = ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_resource":
		x.ObjectResource = ""
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_id":
		x.ObjectId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistrationAmended"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistrationAmended does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventObjectRegistrationAmended) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.old_owner":
		value := x.OldOwner
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.new_owner":
		value := x.NewOwner
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_resource":
		value := x.ObjectResource
		return protoreflect.ValueOfString(value)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_id":
		value := x.ObjectId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistrationAmended"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistrationAmended does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistrationAmended) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.old_owner":
		x.OldOwner = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.new_owner":
		x.NewOwner = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_resource":
		x.ObjectResource = value.Interface().(string)
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_id":
		x.ObjectId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistrationAmended"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistrationAmended does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistrationAmended) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.old_owner":
		panic(fmt.Errorf("field old_owner of message sourcenetwork.acp_core.EventObjectRegistrationAmended is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.new_owner":
		panic(fmt.Errorf("field new_owner of message sourcenetwork.acp_core.EventObjectRegistrationAmended is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcenetwork.acp_core.EventObjectRegistrationAmended is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_resource":
		panic(fmt.Errorf("field object_resource of message sourcenetwork.acp_core.EventObjectRegistrationAmended is not mutable"))
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_id":
		panic(fmt.Errorf("field object_id of message sourcenetwork.acp_core.EventObjectRegistrationAmended is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistrationAmended"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistrationAmended does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventObjectRegistrationAmended) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.old_owner":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.new_owner":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_resource":
		return protoreflect.ValueOfString("")
	case "sourcenetwork.acp_core.EventObjectRegistrationAmended.object_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcenetwork.acp_core.EventObjectRegistrationAmended"))
		}
		panic(fmt.Errorf("message sourcenetwork.acp_core.EventObjectRegistrationAmended does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventObjectRegistrationAmended) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcenetwork.acp_core.EventObjectRegistrationAmended", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventObjectRegistrationAmended) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventObjectRegistrationAmended) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventObjectRegistrationAmended) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventObjectRegistrationAmended) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventObjectRegistrationAmended)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.OldOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NewOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectResource)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ObjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectRegistrationAmended)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ObjectId) > 0 {
			i -= len(x.ObjectId)
			copy(dAtA[i:], x.ObjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ObjectResource) > 0 {
			i -= len(x.ObjectResource)
			copy(dAtA[i:], x.ObjectResource)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ObjectResource)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.NewOwner) > 0 {
			i -= len(x.NewOwner)
			copy(dAtA[i:], x.NewOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewOwner)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.OldOwner) > 0 {
			i -= len(x.OldOwner)
			copy(dAtA[i:], x.OldOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OldOwner)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventObjectRegistrationAmended)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectRegistrationAmended: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventObjectRegistrationAmended: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OldOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OldOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectResource", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectResource = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ObjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sourcenetwork/acp_core/event.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventPolicyCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId   string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	PolicyName string `protobuf:"bytes,3,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
}

func (x *EventPolicyCreated) Reset() {
	*x = EventPolicyCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPolicyCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPolicyCreated) ProtoMessage() {}

// Deprecated: Use EventPolicyCreated.ProtoReflect.Descriptor instead.
func (*EventPolicyCreated) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventPolicyCreated) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventPolicyCreated) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

type EventPolicyEdited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId             string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	PolicyName           string `protobuf:"bytes,3,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	RelationshipsRemoved uint64 `protobuf:"varint,4,opt,name=relationships_removed,json=relationshipsRemoved,proto3" json:"relationships_removed,omitempty"`
}

func (x *EventPolicyEdited) Reset() {
	*x = EventPolicyEdited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPolicyEdited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPolicyEdited) ProtoMessage() {}

// Deprecated: Use EventPolicyEdited.ProtoReflect.Descriptor instead.
func (*EventPolicyEdited) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventPolicyEdited) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventPolicyEdited) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *EventPolicyEdited) GetRelationshipsRemoved() uint64 {
	if x != nil {
		return x.RelationshipsRemoved
	}
	return 0
}

type EventAccessDecisionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PolicyId   string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	DecisionId string `protobuf:"bytes,3,opt,name=decision_id,json=decisionId,proto3" json:"decision_id,omitempty"`
	Actor      string `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	ActorDid   string `protobuf:"bytes,5,opt,name=actor_did,json=actorDid,proto3" json:"actor_did,omitempty"`
}

func (x *EventAccessDecisionCreated) Reset() {
	*x = EventAccessDecisionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAccessDecisionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAccessDecisionCreated) ProtoMessage() {}

// Deprecated: Use EventAccessDecisionCreated.ProtoReflect.Descriptor instead.
func (*EventAccessDecisionCreated) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventAccessDecisionCreated) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *EventAccessDecisionCreated) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventAccessDecisionCreated) GetDecisionId() string {
	if x != nil {
		return x.DecisionId
	}
	return ""
}

func (x *EventAccessDecisionCreated) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *EventAccessDecisionCreated) GetActorDid() string {
	if x != nil {
		return x.ActorDid
	}
	return ""
}

type EventObjectRegistered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor          string `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	PolicyId       string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ObjectResource string `protobuf:"bytes,3,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *EventObjectRegistered) Reset() {
	*x = EventObjectRegistered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventObjectRegistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventObjectRegistered) ProtoMessage() {}

// Deprecated: Use EventObjectRegistered.ProtoReflect.Descriptor instead.
func (*EventObjectRegistered) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventObjectRegistered) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *EventObjectRegistered) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventObjectRegistered) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *EventObjectRegistered) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type EventObjectArchived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor          string `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	PolicyId       string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ObjectResource string `protobuf:"bytes,3,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *EventObjectArchived) Reset() {
	*x = EventObjectArchived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventObjectArchived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventObjectArchived) ProtoMessage() {}

// Deprecated: Use EventObjectArchived.ProtoReflect.Descriptor instead.
func (*EventObjectArchived) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{4}
}

func (x *EventObjectArchived) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *EventObjectArchived) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventObjectArchived) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *EventObjectArchived) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type EventObjectUnarchived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor          string `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	PolicyId       string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ObjectResource string `protobuf:"bytes,3,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *EventObjectUnarchived) Reset() {
	*x = EventObjectUnarchived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventObjectUnarchived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventObjectUnarchived) ProtoMessage() {}

// Deprecated: Use EventObjectUnarchived.ProtoReflect.Descriptor instead.
func (*EventObjectUnarchived) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventObjectUnarchived) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *EventObjectUnarchived) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventObjectUnarchived) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *EventObjectUnarchived) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type EventObjectTransfered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewOwner       string `protobuf:"bytes,1,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	PolicyId       string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ObjectResource string `protobuf:"bytes,3,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *EventObjectTransfered) Reset() {
	*x = EventObjectTransfered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventObjectTransfered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventObjectTransfered) ProtoMessage() {}

// Deprecated: Use EventObjectTransfered.ProtoReflect.Descriptor instead.
func (*EventObjectTransfered) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{6}
}

func (x *EventObjectTransfered) GetNewOwner() string {
	if x != nil {
		return x.NewOwner
	}
	return ""
}

func (x *EventObjectTransfered) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventObjectTransfered) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *EventObjectTransfered) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type EventObjectRegistrationAmended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldOwner       string `protobuf:"bytes,1,opt,name=old_owner,json=oldOwner,proto3" json:"old_owner,omitempty"`
	NewOwner       string `protobuf:"bytes,2,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	PolicyId       string `protobuf:"bytes,3,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ObjectResource string `protobuf:"bytes,4,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,5,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *EventObjectRegistrationAmended) Reset() {
	*x = EventObjectRegistrationAmended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcenetwork_acp_core_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventObjectRegistrationAmended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventObjectRegistrationAmended) ProtoMessage() {}

// Deprecated: Use EventObjectRegistrationAmended.ProtoReflect.Descriptor instead.
func (*EventObjectRegistrationAmended) Descriptor() ([]byte, []int) {
	return file_sourcenetwork_acp_core_event_proto_rawDescGZIP(), []int{7}
}

func (x *EventObjectRegistrationAmended) GetOldOwner() string {
	if x != nil {
		return x.OldOwner
	}
	return ""
}

func (x *EventObjectRegistrationAmended) GetNewOwner() string {
	if x != nil {
		return x.NewOwner
	}
	return ""
}

func (x *EventObjectRegistrationAmended) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EventObjectRegistrationAmended) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *EventObjectRegistrationAmended) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

var File_sourcenetwork_acp_core_event_proto protoreflect.FileDescriptor

var file_sourcenetwork_acp_core_event_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x61, 0x63, 0x70, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x61, 0x63, 0x70, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x52, 0x0a, 0x12,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x1a, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x61, 0x63, 0x70, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sourcenetwork_acp_core_event_proto_rawDescOnce sync.Once
	file_sourcenetwork_acp_core_event_proto_rawDescData = file_sourcenetwork_acp_core_event_proto_rawDesc
)

func file_sourcenetwork_acp_core_event_proto_rawDescGZIP() []byte {
	file_sourcenetwork_acp_core_event_proto_rawDescOnce.Do(func() {
		file_sourcenetwork_acp_core_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_sourcenetwork_acp_core_event_proto_rawDescData)
	})
	return file_sourcenetwork_acp_core_event_proto_rawDescData
}

var file_sourcenetwork_acp_core_event_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_sourcenetwork_acp_core_event_proto_goTypes = []interface{}{
	(*EventPolicyCreated)(nil),             // 0: sourcenetwork.acp_core.EventPolicyCreated
	(*EventPolicyEdited)(nil),              // 1: sourcenetwork.acp_core.EventPolicyEdited
	(*EventAccessDecisionCreated)(nil),     // 2: sourcenetwork.acp_core.EventAccessDecisionCreated
	(*EventObjectRegistered)(nil),          // 3: sourcenetwork.acp_core.EventObjectRegistered
	(*EventObjectArchived)(nil),            // 4: sourcenetwork.acp_core.EventObjectArchived
	(*EventObjectUnarchived)(nil),          // 5: sourcenetwork.acp_core.EventObjectUnarchived
	(*EventObjectTransfered)(nil),          // 6: sourcenetwork.acp_core.EventObjectTransfered
	(*EventObjectRegistrationAmended)(nil), // 7: sourcenetwork.acp_core.EventObjectRegistrationAmended
}
var file_sourcenetwork_acp_core_event_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sourcenetwork_acp_core_event_proto_init() }
func file_sourcenetwork_acp_core_event_proto_init() {
	if File_sourcenetwork_acp_core_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sourcenetwork_acp_core_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPolicyCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPolicyEdited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAccessDecisionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventObjectRegistered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventObjectArchived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventObjectUnarchived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventObjectTransfered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcenetwork_acp_core_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventObjectRegistrationAmended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sourcenetwork_acp_core_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sourcenetwork_acp_core_event_proto_goTypes,
		DependencyIndexes: file_sourcenetwork_acp_core_event_proto_depIdxs,
		MessageInfos:      file_sourcenetwork_acp_core_event_proto_msgTypes,
	}.Build()
	File_sourcenetwork_acp_core_event_proto = out.File
	file_sourcenetwork_acp_core_event_proto_rawDesc = nil
	file_sourcenetwork_acp_core_event_proto_goTypes = nil
	file_sourcenetwork_acp_core_event_proto_depIdxs = nil
}
